return (
    <div className="container">
      <h1>Text Pattern Processor</h1>
      
      {/* File Upload */}
      <div className="upload-section">
        <label className="file-input-label">
          <input
            type="file"
            accept=".csv,.xlsx,.xls"
            onChange={(e) => setFile(e.target.files[0])}
          />
          {file ? file.name : "Choose CSV/Excel File"}
        </label>
      </div>

      {/* Combined Input */}
      <div className="input-section">
        <textarea
          value={userInput}
          onChange={(e) => setUserInput(e.target.value)}
          placeholder="Example: Find email addresses in the Email column and replace them with 'REDACTED'"
          rows="3"
        />
      </div>

      {/* Process Button */}
      <button 
        onClick={handleProcess}
        disabled={!file || !userInput || isProcessing}
        className="process-button"
      >
        {isProcessing ? 'Processing...' : 'Process File'}
      </button>

      {/* Display Regex Pattern */}
      {regexPattern ? (
        <div className="regex-section">
          <h2>Regex Pattern</h2>
          <pre>{regexPattern}</pre>
        </div>
      ) : (
        <div>No regex pattern generated yet.</div>  // Fallback message
      )}


      {/* Results Display */}
      {processedData && (
        <div className="results-section">
          <h2>Processed Results</h2>
          <div className="results-table">
            <table>
              <thead>
                <tr>
                  {Object.keys(processedData[0]).map((header) => (
                    <th key={header}>{header}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {processedData.map((row, index) => (
                  <tr key={index}>
                    {Object.values(row).map((value, cellIndex) => (
                      <td key={cellIndex}>{value}</td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
    </div>
  );
}